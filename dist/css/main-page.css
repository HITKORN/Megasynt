/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

html {
  box-sizing: border-box; }

html,
body {
  height: 100%; }

body {
  margin: 0;
  background-color: #fff;
  color: #9A9A9A;
  font: 400 16px 'Montserrat', sans-serif; }

a {
  color: #FFDFAB;
  text-decoration: none; }

[disabled] {
  cursor: not-allowed; }

*,
*:before,
*:after {
  box-sizing: inherit; }

img {
  max-width: 100%;
  height: auto; }

p {
  margin: 0 0 10px; }

b,
strong {
  font-family: 'HelveticaNeueCyr Bold', Arial, sans-serif; }

.wrapper {
  min-width: 320px;
  width: 100%;
  display: table;
  table-layout: fixed;
  height: 100vh; }

.align-center {
  -ms-flex-align: center;
      align-items: center; }

.align-right {
  -ms-flex-align: end;
      align-items: flex-end; }

.justify-center {
  -ms-flex-pack: center;
      justify-content: center; }

.justify-between {
  -ms-flex-pack: justify;
      justify-content: space-between; }

.justify-end {
  -ms-flex-pack: end;
      justify-content: flex-end; }

.text-center {
  text-align: center; }

.text-right {
  text-align: right; }

@media screen and (min-width: 768px) {
  .d-f {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; } }

.embed-responsive-16by9,
.embed-wrapper {
  position: relative; }

.embed-responsive-16by9 {
  padding-bottom: 56.2%; }

.embed-responsive-item {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  height: 100%;
  width: 100%;
  border: 0; }

.hidden {
  display: none !important; }

ul,
ol {
  list-style-type: none;
  padding: 0;
  margin: 0; }

a:active {
  color: inherit; }

.slide {
  height: 100vh;
  max-height: 100vh;
  overflow: hidden;
  position: relative; }
  @media screen and (max-width: 767px) {
    .slide {
      max-height: none;
      height: auto; } }
  .slide-first {
    background-color: #18233A;
    height: 100vh; }
    .slide-first a[href^="tel"] {
      font-size: 14px;
      line-height: 36px;
      letter-spacing: 0.7px; }
      @media screen and (max-width: 767px) {
        .slide-first a[href^="tel"] {
          display: none; } }
  .slide-wrapper {
    padding: 5% 300px; }
    @media screen and (max-width: 1500px) {
      .slide-wrapper {
        padding: 2% 150px; } }
    @media screen and (min-height: 1000px) {
      .slide-wrapper {
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        padding: 0 5%;
        min-width: 90%; } }
    @media screen and (max-width: 767px) {
      .slide-wrapper {
        padding: 146px 20px; } }
  .slide-holder {
    padding-left: 85px; }
    @media screen and (max-width: 991px) {
      .slide-holder {
        padding-left: 30px; } }
  .slide-left {
    -ms-flex: 0 0 70%;
        flex: 0 0 70%;
    padding-right: 10%;
    font-size: 20px;
    line-height: 44px;
    letter-spacing: 1px; }
    @media screen and (max-width: 1600px) {
      .slide-left {
        font-size: 16px;
        line-height: 36px; } }
    @media screen and (max-width: 1500px) {
      .slide-left {
        font-size: 14px;
        line-height: 29px; } }
    .slide-left span {
      color: #000; }
  .slide-right {
    -ms-flex: 0 0 30%;
        flex: 0 0 30%;
    font-size: 18px;
    line-height: 36px; }
    @media screen and (max-width: 1600px) {
      .slide-right {
        font-size: 16px; } }
    @media screen and (max-width: 1500px) {
      .slide-right {
        font-size: 14px;
        line-height: 29px; } }
    .slide-right ul li {
      position: relative;
      color: #717171;
      padding-left: 20px; }
      .slide-right ul li:before {
        content: '';
        position: absolute;
        left: 0;
        top: 18px;
        width: 2px;
        height: 2px;
        border-radius: 2px;
        background-color: #717171; }
        @media screen and (max-width: 1500px) {
          .slide-right ul li:before {
            top: 15px; } }
  .slide-top {
    margin-bottom: 60px; }
    @media screen and (max-width: 1600px) {
      .slide-top {
        margin-bottom: 30px; } }
  .slide-menu {
    margin: 0 -40px;
    padding-top: 110px; }
    @media screen and (max-width: 1600px) {
      .slide-menu {
        padding-top: 50px; } }

.main-text {
  padding-top: 20%; }
  @media screen and (max-width: 1500px) {
    .main-text {
      padding-top: 13%; } }
  .main-text > span {
    color: #fff;
    font-size: 36px;
    line-height: 100px;
    letter-spacing: 36px;
    text-transform: uppercase;
    display: block;
    margin-bottom: 30px; }
    @media screen and (max-width: 1600px) {
      .main-text > span {
        font-size: 35px;
        line-height: 85px;
        letter-spacing: 29px; } }
    @media screen and (max-width: 767px) {
      .main-text > span {
        font-size: 14px;
        line-height: 40px;
        letter-spacing: 8px; } }
  .main-text ul {
    margin-bottom: 15px; }
    @media screen and (max-width: 767px) {
      .main-text ul {
        margin-bottom: 0; } }
    .main-text ul li {
      font-size: 20px;
      line-height: 44px; }
      @media screen and (max-width: 767px) {
        .main-text ul li {
          font-size: 12px;
          line-height: 36px; } }
  @media screen and (max-width: 767px) {
    .main-text a {
      font-size: 12px;
      line-height: 36px; } }

.menu-button {
  background-color: #18233A;
  padding: 48px 120px;
  color: #fff;
  font-size: 20px;
  line-height: 24px;
  min-width: 380px;
  text-align: center;
  display: block;
  margin-bottom: 37px; }
  @media screen and (max-width: 1600px) {
    .menu-button {
      margin-bottom: 20px;
      font-size: 16px;
      padding: 30px 90px;
      min-width: 280px; } }
  @media screen and (max-width: 991px) {
    .menu-button {
      padding: 20px 70px;
      min-width: 240px; } }

.menu-item {
  padding: 0 40px; }
  .menu-item ul li {
    font-size: 18px;
    line-height: 36px;
    color: #717171; }
    @media screen and (max-width: 1600px) {
      .menu-item ul li {
        font-size: 16px;
        line-height: 28px; } }

.sidebar {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 300px;
  left: 0;
  background-color: rgba(216, 216, 216, 0.1); }
  @media screen and (max-width: 1500px) {
    .sidebar {
      width: 200px; } }
  @media screen and (min-height: 1000px) {
    .sidebar {
      width: 100px; } }
  @media screen and (max-width: 991px) {
    .sidebar {
      width: 80px; } }
  @media screen and (max-width: 767px) {
    .sidebar {
      width: 40px; } }

.heading-h2 {
  font-size: 20px;
  font-weight: bold;
  line-height: 24px;
  color: #BC814C;
  margin-bottom: 60px; }
  @media screen and (max-width: 1500px) {
    .heading-h2 {
      margin-bottom: 30px; } }

.video-section {
  width: 360px;
  height: 600px;
  position: relative;
  background-color: #ccc; }
  @media screen and (max-width: 1500px) {
    .video-section {
      width: 300px;
      height: 400px; } }
  @media screen and (max-width: 991px) {
    .video-section {
      width: 200px; } }

.btn-video {
  position: absolute;
  bottom: 40px;
  left: -60px;
  background-color: #18233A;
  padding: 48px 90px;
  color: #fff;
  text-align: center;
  border: none;
  line-height: 24px;
  font-size: 20px;
  font-weight: 500; }
  @media screen and (max-width: 1500px) {
    .btn-video {
      padding: 30px 60px;
      font-size: 16px; } }
  @media screen and (max-width: 991px) {
    .btn-video {
      padding: 24px 40px; } }

.user-info {
  font-size: 18px;
  line-height: 30px;
  padding-top: 100px; }
  @media screen and (max-width: 1500px) {
    .user-info {
      font-size: 14px;
      line-height: 29px; } }
  .user-info p {
    margin: 0; }

.footer-menu {
  font-size: 20px;
  line-height: 36px;
  letter-spacing: 1px;
  padding: 0 20px; }
  @media screen and (max-width: 1500px) {
    .footer-menu {
      font-size: 14px;
      line-height: 29px; } }

.footer-heading {
  color: #717171;
  font-size: 24px;
  line-height: 29px;
  margin-bottom: 25px;
  font-weight: 500;
  color: #9B9B9B; }
  @media screen and (max-width: 1500px) {
    .footer-heading {
      font-size: 20px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
